import asyncio

from fastapi import Request

from aiocryptopay import AioCryptoPay, Networks
from aiocryptopay.models.invoice import PaidButtons
from cryptopayments.config import settings, logger, crypto
from exceptions import exception_unauthorized


async def check_token(request: Request):
    """ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ """

    token = request.headers.get('token')
    if not token == settings.DB_KEY_VALIDATION:
        logger.info(f' token: {token}')
        raise exception_unauthorized


async def create_invoice(amount: int):
    """ –°–æ–∑–¥–∞–µ—Ç –∏–Ω–≤–æ–π—Å –≤ Crypto Bot """

    invoice = await crypto.create_invoice(
        asset="USDT",
        amount=amount,
        description="–û–ø–ª–∞—Ç–∞ –∫—É—Ä—Å–æ–≤ Pythonic Bytes",
        paid_btn_name="openChannel",
        paid_btn_url="https://t.me/pybytes",
        expires_in=18000,
        hidden_message="üéÅ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º –∫—É—Ä—Å–∞, "
                       "–Ω–∞–¥–µ–µ–º—Å—è —á—Ç–æ —Ç–≤–æ–π –ø—É—Ç—å –±—É–¥–µ—Ç –ª–µ–≥–∫–∏–π –∏ –ø–æ–ª–Ω—ã–π —É–¥–∞—á."
                       "\n–¢–≤–æ–∏–º –∫—É—Ä–∞—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç @python_devss"
    )

    return invoice


async def get_invoice_status(invoice_id: int) -> bool:
    """ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–º–µ—Ä –∏–Ω–≤–æ–π—Å–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ """

    check = await crypto.get_invoices(invoice_ids=invoice_id)
    status = check.status

    if status == "paid":
        return True
    return False
